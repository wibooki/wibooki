<?php

namespace AppBundle\Repository;
use AppBundle\Entity\Itinerary;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * ItineraryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ItineraryRepository extends \Doctrine\ORM\EntityRepository
{
    public function save($entity)
    {
        $this->_em->persist($entity);
        $this->_em->flush();

        return true;
    }

    /**
     * @param string $user
     *
     * @return ArrayCollection
     */
    public function findAllPublic($user)
    {
        $qb = $this->createQueryBuilder("e");

        $qb->select('e')
            ->where('e.user = :user')
            ->orWhere('e.parent IS NULL AND e.user != :user')
            ->setParameter('user', $user)
        ;

        $result = $qb->getQuery()->getResult();

        return $result;
    }

    /**
     * @param string $user
     * @param string $itinerary
     *
     * @return Itinerary|null
     */
    public function findOneByUserAndParent($user,$itinerary)
    {
        $qb = $this->createQueryBuilder("e");

        $qb->select('e')
//            ->where('e.status = 1')
            ->where('e.parent = :itinerary')
            ->andWhere('e.user = :user')
            ->setParameter('user', $user)
            ->setParameter('itinerary', $itinerary)
        ;

        $result = $qb->getQuery()->getOneOrNullResult();

        return $result;
    }

    /**
     * @param string $itinerary
     *
     * @return Itinerary|null
     */
    public function findOneByParent($itinerary)
    {
        $qb = $this->createQueryBuilder("e");

        $qb->select('e')
//            ->where('e.status = 1')
            ->where('e.parent = :itinerary')
            ->setParameter('itinerary', $itinerary)
        ;

        $result = $qb->getQuery()->getOneOrNullResult();

        return $result;
    }

    /**
     * @param string $key
     *
     * @return ArrayCollection
     */
    public function findByKeyword($key)
    {
        $qb = $this->createQueryBuilder("e");

        $qb->select('e')
//            ->where('e.status = 1')
            ->where('e.title LIKE :key OR e.description LIKE :key')
            ->andWhere('e.parent IS NULL')
            ->setParameter('key', '%' . $key . '%')
        ;

        $result = $qb->getQuery()->getResult();

        return $result;
    }
}
